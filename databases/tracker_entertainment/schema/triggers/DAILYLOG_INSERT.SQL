SET TERM !! ;

CREATE OR ALTER TRIGGER DAILYLOG_INSERT FOR DAILYLOG
ACTIVE BEFORE INSERT POSITION 0
AS
  DECLARE VARIABLE ACTIVITY_USERID INTEGER;
BEGIN
  IF (NEW.USERID IS NULL) THEN EXCEPTION FIELD_REQUIRED 'UserId is required.';
  IF (NEW.ACTIVITYID IS NULL) THEN EXCEPTION FIELD_REQUIRED 'ActivityId is required.';
  IF (NEW.ACTIVITYDATE IS NULL) THEN EXCEPTION FIELD_REQUIRED 'Activity Date is required.';

  /* Activity must exist and belong to this user */
  SELECT USERID FROM ACTIVITY WHERE ID = :NEW.ACTIVITYID INTO :ACTIVITY_USERID;
  IF (ACTIVITY_USERID IS NULL) THEN EXCEPTION GOT_HERE 'Activity not found.';
  IF (ACTIVITY_USERID <> NEW.USERID) THEN EXCEPTION GOT_HERE 'Log user does not match Activity user.';

  /* Progress rules */
  IF (NEW.PROGRESS IS NULL) THEN NEW.PROGRESS = 0;
  IF (NEW.PROGRESS < 0) THEN EXCEPTION GOT_HERE 'Progress cannot be negative.';
  IF (NEW.PROGRESS > 0 AND NEW.UOMID IS NULL) THEN EXCEPTION FIELD_REQUIRED 'Unit of Measure is required when Progress > 0.';

  /* Defaults */
  IF (NEW.ID IS NULL) THEN NEW.ID = GEN_ID(GEN_DAILYLOG_ID,1);
  IF (NEW.NOTES IS NULL OR TRIM(NEW.NOTES) = '') THEN NEW.NOTES = '';
END
!!

SET TERM ; !!