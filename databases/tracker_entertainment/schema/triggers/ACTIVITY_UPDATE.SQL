SET TERM !! ;

CREATE OR ALTER TRIGGER ACTIVITY_UPDATE FOR ACTIVITY
ACTIVE BEFORE UPDATE POSITION 0
AS
  DECLARE VARIABLE OTHER_ID INTEGER;
BEGIN
  IF (NEW.COMPLETED IS NULL) THEN NEW.COMPLETED = 0;
  IF (NEW.DNF IS NULL) THEN NEW.DNF = 0;
  IF (NEW.REVIEWED IS NULL) THEN NEW.REVIEWED = 0;
  IF (NEW.REVIEWTEXT IS NULL) THEN NEW.REVIEWTEXT = '';
  IF (NEW.HIDEREVIEW IS NULL) THEN NEW.HIDEREVIEW = 0;
  IF (NEW.DELETED IS NULL) THEN NEW.DELETED = 0;

  IF (NEW.USERID IS DISTINCT FROM OLD.USERID) THEN EXCEPTION GOT_HERE 'Cannot change UserId.';
  IF (NEW.TITLEID IS DISTINCT FROM OLD.TITLEID) THEN EXCEPTION GOT_HERE 'Cannot change Title.';
  IF (NEW.CREATEDON IS DISTINCT FROM OLD.CREATEDON) THEN EXCEPTION GOT_HERE 'Cannot change Created On Date.';

  IF (NEW.STATUSID IS NULL OR NEW.STATUSID NOT BETWEEN 1 AND 4) THEN EXCEPTION FIELD_REQUIRED 'Valid StatusId (1-4) is required.';
  IF ((NEW.RATING IS NOT NULL) AND (NEW.RATING NOT BETWEEN 0 AND 5)) THEN EXCEPTION FIELD_REQUIRED 'Valid Review (0-5) is required.';

  IF (NEW.STATUSID IN (1,2)) THEN BEGIN
    -- If updating THIS row into 1/2, ensure no other 1/2 exists.
    SELECT FIRST 1 ID
      FROM ACTIVITY
     WHERE USERID  = :NEW.USERID
       AND TITLEID = :NEW.TITLEID
       AND STATUSID IN (1,2)
       AND ID <> :OLD.ID
     FOR UPDATE WITH LOCK
     INTO :OTHER_ID;

    IF (OTHER_ID IS NOT NULL) THEN EXCEPTION ACTIVITY_DUP;
  END

  /* PLANNED */
  IF (NEW.STATUSID = 1) THEN BEGIN
    NEW.STARTDATE  = NULL;
    NEW.FINISHDATE = NULL;
    NEW.COMPLETED  = 0;
    NEW.DNF        = 0;
    NEW.DNFON      = NULL;
  END
  /* IN-PROGRESS */
  ELSE IF (NEW.STATUSID = 2) THEN BEGIN
    NEW.STARTDATE  = COALESCE(NEW.STARTDATE, OLD.STARTDATE, CURRENT_DATE);
    NEW.FINISHDATE = NULL;
    NEW.COMPLETED  = 0;
    NEW.DNF        = 0;
    NEW.DNFON      = NULL;
  END
  /* COMPLETED */
  ELSE IF (NEW.STATUSID = 3) THEN BEGIN
    NEW.COMPLETED  = 1;
    NEW.DNF        = 0;
    NEW.DNFON      = NULL;
    IF (NEW.FINISHDATE IS NOT NULL AND NEW.STARTDATE IS NULL) THEN
      NEW.STARTDATE = NEW.FINISHDATE;
  END
  /* DID NOT FINISH */
  ELSE IF (NEW.STATUSID = 4) THEN BEGIN
    NEW.COMPLETED  = 0;
    NEW.DNF        = 1;
    IF (NEW.DNFON IS NULL) THEN NEW.DNFON = CURRENT_TIMESTAMP;
  END

  /* Review fields */
  IF (NEW.REVIEWED = 1) THEN BEGIN
    IF (NEW.REVIEWEDON IS NULL) THEN NEW.REVIEWEDON = CURRENT_TIMESTAMP;
    IF (NEW.REVIEWTEXT IS NULL) THEN NEW.REVIEWTEXT = '';
    IF (NEW.HIDEREVIEW IS NULL) THEN NEW.HIDEREVIEW = 0;
    -- rating: leave as provided (NULL or 0?5)
  END
  ELSE BEGIN
    NEW.REVIEWED   = 0;
    NEW.REVIEWEDON = NULL;
    NEW.RATING     = NULL;
    NEW.REVIEWTEXT = '';
    NEW.HIDEREVIEW = 0;
  END
  
  IF ((NEW.DELETED) <> (OLD.DELETED)) THEN BEGIN
    IF (NEW.DELETED = 0) THEN NEW.DELETEDON = NULL;
    IF (NEW.DELETED = 1) THEN NEW.DELETEDON = CURRENT_TIMESTAMP;
  END

  NEW.MODIFIEDON = CURRENT_TIMESTAMP;
END
!!

SET TERM ; !!