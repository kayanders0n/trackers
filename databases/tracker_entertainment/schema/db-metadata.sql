/******************************************************************************/
/****        Generated by IBExpert 2021.12.6.1 6/17/2025 2:29:04 PM        ****/
/******************************************************************************/

/******************************************************************************/
/****     Following SET SQL DIALECT is just for the Database Comparer      ****/
/******************************************************************************/
SET SQL DIALECT 3;



/******************************************************************************/
/****                              Generators                              ****/
/******************************************************************************/

CREATE GENERATOR GEN_ENTITY_ID START WITH 1 INCREMENT BY 1;
CREATE GENERATOR GEN_GENRE_ID START WITH 1 INCREMENT BY 1;
CREATE GENERATOR GEN_PEOPLE_ID START WITH 1 INCREMENT BY 1;
CREATE GENERATOR GEN_SERIES_ID START WITH 1 INCREMENT BY 1;
CREATE GENERATOR GEN_TITLE_ID START WITH 1 INCREMENT BY 1;


/******************************************************************************/
/****                                Tables                                ****/
/******************************************************************************/



CREATE TABLE AUTHOR (
    TITLEID   INTEGER NOT NULL,
    PEOPLEID  INTEGER NOT NULL,
    ORDERID   INTEGER
);

CREATE TABLE ENTITY (
    ID        INTEGER NOT NULL,
    DESCRIPT  VARCHAR(50) NOT NULL,
    TYPEID    INTEGER
);

CREATE TABLE GENRE (
    ID               INTEGER NOT NULL,
    DESCRIPT         VARCHAR(25) NOT NULL,
    ISENTERTAINMENT  INTEGER,
    ISBOOK           INTEGER
);

CREATE TABLE PEOPLE (
    ID         INTEGER NOT NULL,
    FIRSTNAME  VARCHAR(25),
    LASTNAME   VARCHAR(25)
);

CREATE TABLE PLATFORM (
    TITLEID   INTEGER NOT NULL,
    ENTITYID  INTEGER NOT NULL,
    ORDERID   INTEGER
);

CREATE TABLE PRODUCTION (
    TITLEID   INTEGER NOT NULL,
    ENTITYID  INTEGER NOT NULL,
    ORDERID   INTEGER
);

CREATE TABLE SERIES (
    ID        INTEGER NOT NULL,
    DESCRIPT  VARCHAR(50) NOT NULL
);

CREATE TABLE TITLE (
    ID            INTEGER NOT NULL,
    DESCRIPT      VARCHAR(50) NOT NULL,
    TYPEID        INTEGER NOT NULL,
    SERIESID      INTEGER,
    ORDERID       DOUBLE PRECISION,
    FIRSTRELEASE  DATE,
    CONTENT_SIZE  INTEGER,
    UOMID         INTEGER,
    IMAGEFILE     VARCHAR(250)
);

CREATE TABLE TITLEGENRE (
    TITLEID  INTEGER NOT NULL,
    GENREID  INTEGER NOT NULL,
    ORDERID  INTEGER
);

CREATE TABLE TYPECODES (
    ID        INTEGER NOT NULL,
    DESCRIPT  VARCHAR(10)
);

CREATE TABLE UOM (
    ID        INTEGER NOT NULL,
    DESCRIPT  VARCHAR(10) NOT NULL
);



/******************************************************************************/
/****                          Unique constraints                          ****/
/******************************************************************************/

ALTER TABLE AUTHOR ADD UNIQUE (TITLEID, PEOPLEID);
ALTER TABLE PLATFORM ADD UNIQUE (TITLEID, ENTITYID);
ALTER TABLE PRODUCTION ADD UNIQUE (TITLEID, ENTITYID);
ALTER TABLE TITLEGENRE ADD UNIQUE (TITLEID, GENREID);


/******************************************************************************/
/****                             Primary keys                             ****/
/******************************************************************************/

ALTER TABLE ENTITY ADD PRIMARY KEY (ID);
ALTER TABLE GENRE ADD PRIMARY KEY (ID);
ALTER TABLE PEOPLE ADD PRIMARY KEY (ID);
ALTER TABLE SERIES ADD PRIMARY KEY (ID);
ALTER TABLE TITLE ADD PRIMARY KEY (ID);
ALTER TABLE TYPECODES ADD PRIMARY KEY (ID);
ALTER TABLE UOM ADD PRIMARY KEY (ID);


/******************************************************************************/
/****                               Triggers                               ****/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/****                         Triggers for tables                          ****/
/******************************************************************************/



/* Trigger: ENTITY_INSERT */
CREATE OR ALTER TRIGGER ENTITY_INSERT FOR ENTITY
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN NEW.ID = GEN_ID(GEN_ENTITY_ID,1);
END
^

/* Trigger: GENRE_INSERT */
CREATE OR ALTER TRIGGER GENRE_INSERT FOR GENRE
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN NEW.ID = GEN_ID(GEN_GENRE_ID,1);
END
^

/* Trigger: SERIES_INSERT */
CREATE OR ALTER TRIGGER SERIES_INSERT FOR SERIES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN NEW.ID = GEN_ID(GEN_SERIES_ID,1);
END
^

/* Trigger: TITLE_INSERT */
CREATE OR ALTER TRIGGER TITLE_INSERT FOR TITLE
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN NEW.ID = GEN_ID(GEN_TITLE_ID,1);
END
^
SET TERM ; ^

