DROP TABLE ITEM;
DROP TABLE SERIES;

DROP GENERATOR GEN_ITEM_ID;
DROP GENERATOR GEN_SERIES_ID;

CREATE SEQUENCE GEN_ITEM_ID START WITH 1 INCREMENT BY 1;
GRANT USAGE ON SEQUENCE GEN_ITEM_ID TO "PUBLIC";

CREATE SEQUENCE GEN_SERIES_ID START WITH 1 INCREMENT BY 1;
GRANT USAGE ON SEQUENCE GEN_SERIES_ID TO "PUBLIC";

CREATE TABLE ITEM (
    ID INTEGER,
    DESCRIPT VARCHAR(50) NOT NULL, --MAKE NOT NULL - ERR MESSAGE IF NULL
    TYPEID INTEGER NOT NULL, --FK TYPE TABLE
    SERIESID INTEGER, --FK SERIES TABLE
    ORDERNUM DOUBLE PRECISION, --CAN BE NULL, CAN BE DECIMALS (0.5 FOR PREQUEL, ETC)
    FIRSTRELEASE DATE,
    LENGTH INTEGER, --PAGES FOR BOOK, MINUTES FOR MOVIE - UI CAN TRANSLATE TO ACTUAL TIME HH:MM AS NEEDED
    UOMID INTEGER, --FK UOM TABLE - PAGES/MINUTES
    PRIMARY KEY (ID)
);

CREATE TABLE SERIES (
    ID INTEGER,
    DESCRIPT VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
);

SET TERM !! ;

CREATE OR ALTER TRIGGER ITEM_INSERT FOR ITEM
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN NEW.ID = GEN_ID(GEN_ITEM_ID,1);
END;
!!

CREATE OR ALTER TRIGGER SERIES_INSERT FOR SERIES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
  IF (NEW.ID IS NULL) THEN NEW.ID = GEN_ID(GEN_SERIES_ID,1);
END;
!!

SET TERM ; !!